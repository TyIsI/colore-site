"use strict";(self.webpackChunkcolore_github_io=self.webpackChunkcolore_github_io||[]).push([[237],{237:function(e,i,n){n.r(i),n.d(i,{default:function(){return l}});var o="Background_Background__6OKlv",r=n(184),t=function(){return(0,r.jsxs)("div",{className:o,children:[(0,r.jsx)("p",{children:"Challenges:"}),(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"PHP does not enforce a clear path of execution, allowing PHP code to be mixed with HTML/display elements."}),(0,r.jsx)("li",{children:"In order to solve this, a clear pipeline/path of execution needed to be established."}),(0,r.jsx)("li",{children:"None of the existing frameworks provided a solution for re-use of the same logic for multiple input and output types."}),(0,r.jsx)("li",{children:"Upon receiving a request, a generic framework would have to first figure out the input type it received in a intelligent manner and then use the correct input decoder based on the actual input type."}),(0,r.jsx)("li",{children:"In the case of a Flash client, using Flash-remoting to communicate, this would be a specific Remote Call; a request from a webbrowser could in essence be considered to be the same request, but with added visual rendering."}),(0,r.jsx)("li",{children:"A uniform way of specifying a request needed to be specified."}),(0,r.jsxs)("li",{children:["A uniform way was needed to describe sets of shared logic used in different sets.",(0,r.jsx)("ul",{children:(0,r.jsx)("li",{children:" I.e. /showreservations and /makereservation could both required user authentication."})})]}),(0,r.jsx)("li",{children:"Any input type dependent logic had to dynamically be executed based on the initial inspection of the request."}),(0,r.jsx)("li",{children:"Colore was therefor inspired/based on the principle of Digital Signal Processors."})]}),(0,r.jsx)("p",{children:"Solution:"}),(0,r.jsx)("p",{children:"Because remote calls from a client could clearly be mapped out to a chain of logic, Colore was therefor centered around the concept of providing a solution to mapping out and executing these individual chains of logic."}),(0,r.jsx)("p",{children:"Colore does so by implementing a Master-Worker pattern and makes use of the following patterns and concepts:"}),(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:(0,r.jsx)("a",{rel:"nofollow",className:"external text",href:"http://en.wikipedia.org/wiki/Aspect-oriented_programming",children:"Aspect-Oriented Programming"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{rel:"nofollow",className:"external text",href:"http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern",children:"Chain-of-Responsibility pattern"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{rel:"nofollow",className:"external text",href:"http://en.wikipedia.org/wiki/Dependency_injection",children:"Dependency Injection"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{rel:"nofollow",className:"external text",href:"http://en.wikipedia.org/wiki/Flow-based_programming",children:"Flow-based Programming"})}),(0,r.jsxs)("li",{children:[" ",(0,r.jsx)("a",{rel:"nofollow",className:"external text",href:"http://en.wikipedia.org/wiki/Inversion_of_control",children:"Inversion of Control"})]}),(0,r.jsxs)("li",{children:[" ",(0,r.jsx)("a",{rel:"nofollow",className:"external text",href:"http://en.wikipedia.org/wiki/Separation_of_concern",children:"Separation of Concern"})]})]})]})};t.defaultProps={};var l=t}}]);
//# sourceMappingURL=237.08d598e4.chunk.js.map