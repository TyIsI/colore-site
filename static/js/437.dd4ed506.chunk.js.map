{"version":3,"file":"static/js/437.dd4ed506.chunk.js","mappings":"6QACA,EAAuB,mBAAvB,EAAqD,uB,oBCArD,K,SCGMA,EAAU,kBACd,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,SAACC,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,aAClC,SAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,eAClC,SAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,aAClC,SAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,YAClC,SAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,aAClC,SAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,UAClC,iBAAMJ,UAAU,kBAAhB,4BAMJD,EAAQM,aAAe,GAEvB,QCNMC,EAA+CC,oBAE/CC,EAAW,WACf,IAAIC,EAAiD,MAA1CF,CAAAA,SAAAA,aAAAA,WAAAA,sCAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,kBAAAA,qBAAYG,2BAAqCH,CAAAA,SAAAA,aAAAA,WAAAA,sCAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,kBAAAA,qBAAYG,2BAA7D,iDAAoIJ,GAM/I,MAJsC,MAAlCG,EAAIE,UAAUF,EAAIG,OAAS,KAC7BH,EAAMA,EAAIE,UAAU,EAAGF,EAAIG,OAAS,IAG/BH,EAPQ,GAUXI,EAAO,6BAAyBP,EAAzB,SAEPQ,EAAU,yCAAG,WAAOC,EAAUC,EAAYC,GAA7B,uGAEQC,MAAM,GAAD,OAAIV,EAAJ,YAAeO,EAAf,QAFb,YAETI,EAFS,QAGFC,GAHE,iCAIUD,EAASE,OAJnB,OAIPC,EAJO,OAMbN,EAAWM,GACXL,GAAW,GAPE,wBASbA,GAAW,GACXD,EAAW,iDAVE,0DAafO,QAAQC,IAAR,MACAR,EAAW,kLAAoLH,EAAU,KACzMI,GAAW,GAfI,0DAAH,0DAmBVQ,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNC,GAAaC,EAAAA,EAAAA,MAAbD,SAER,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBb,EAAhB,KACA,GAA8BY,EAAAA,EAAAA,UAAS,MAAvC,eAAOE,EAAP,KAAgBf,EAAhB,KAEMD,GAAWiB,EAAAA,EAAAA,GAA8B,MAARN,EAAeA,EAAOC,EAASM,MAAM,KAAK,IAUjF,OARAC,EAAAA,EAAAA,YAAU,WACRpB,EAAWC,EAAUC,EAAYC,KAChC,KAEHiB,EAAAA,EAAAA,YAAU,WACRpB,EAAWC,EAAUC,EAAYC,KAChC,CAACS,EAAMC,KAEM,IAAZG,GAEA,gBAAK9B,UAAWmC,IAAW,CAAClC,EAAa,aAAzC,UACE,SAAC,EAAD,OAMJ,iBAAKD,UAAWC,EAAhB,WACE,cAAGmC,KAAI,UAAKvB,EAAL,YAAgBE,GAAvB,UAAmC,SAACsB,EAAA,EAAD,CAAOC,IAAI,OAAOtC,UAAWmC,IAAW,CAAClC,IAAmBsC,I,8zGAClF,IAAZT,GAAqBC,EAAQnB,OAAS,IAAM,SAAC,IAAD,CAAe4B,cAAe,CAACC,EAAAA,GAA/B,SAA4CV,QAS/FN,EAAKpB,aAAe,GAEpB","sources":["webpack://colore.github.io/./src/pages/Wiki/Wiki.module.scss?5247","components/Loading/Loading.module.scss","components/Loading/Loading.js","pages/Wiki/Wiki.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Wiki\":\"Wiki_Wiki__dGOhN\",\"WikiLink\":\"Wiki_WikiLink__RHqlK\"};","// extracted by mini-css-extract-plugin\nexport default {};","import { Spinner } from 'react-bootstrap'\n\nimport styles from './Loading.module.scss'\n\nconst Loading = () => (\n  <div className={styles.Loading}>\n    <Spinner animation=\"grow\" variant=\"primary\" />\n    <Spinner animation=\"grow\" variant=\"secondary\" />\n    <Spinner animation=\"grow\" variant=\"success\" />\n    <Spinner animation=\"grow\" variant=\"danger\" />\n    <Spinner animation=\"grow\" variant=\"warning\" />\n    <Spinner animation=\"grow\" variant=\"info\" />\n    <span className=\"visually-hidden\">Loading...</span>\n  </div>\n)\n\nLoading.propTypes = {}\n\nLoading.defaultProps = {}\n\nexport default Loading\n","import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Image } from 'react-bootstrap'\nimport classNames from 'classnames'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { useLocation } from 'react-router'\n\nimport styles from './Wiki.module.scss'\n\nimport WikiImg from '../../assets/images/Wiki.png'\nimport { capitalizeFirstLetter } from 'utils'\nimport Loading from 'components/Loading/Loading'\n\nconst repo = process.env.REACT_APP_GH_REPO != null ? process.env.REACT_APP_GH_REPO : 'Colore/colore.github.io'\n\nconst baseUri = (() => {\n  let uri = (process.env.REACT_APP_WIKI_CONTENT_URI != null ? process.env.REACT_APP_WIKI_CONTENT_URI : `https://raw.githubusercontent.com/wiki/${repo}`)\n\n  if (uri.substring(uri.length - 1) === '/') {\n    uri = uri.substring(0, uri.length - 1)\n  }\n\n  return uri\n})()\n\nconst wikiUrl = `https://github.com/${repo}/wiki`\n\nconst getContent = async (wikiPath, setContent, setLoading) => {\n  try {\n    const response = await fetch(`${baseUri}/${wikiPath}.md`)\n    if (response.ok) {\n      const markdown = await response.text()\n\n      setContent(markdown)\n      setLoading(false)\n    } else {\n      setLoading(false)\n      setContent('# Page not found\\n\\nThis page does not exist.')\n    }\n  } catch (e) {\n    console.log(e)\n    setContent('# Unknown Error\\n\\nAn unknown error occured while fetching this page.\\n\\nPlease try again later. Or if this error persists, please report it to the [Colore GitHub repository](' + wikiUrl + ')')\n    setLoading(false)\n  }\n}\n\nconst Wiki = ({ page }) => {\n  const { pathname } = useLocation()\n\n  const [loading, setLoading] = useState(true)\n  const [content, setContent] = useState(null)\n\n  const wikiPath = capitalizeFirstLetter(page != null ? page : pathname.split('/')[1])\n\n  useEffect(() => {\n    getContent(wikiPath, setContent, setLoading)\n  }, [])\n\n  useEffect(() => {\n    getContent(wikiPath, setContent, setLoading)\n  }, [page, pathname])\n\n  if (loading === true) {\n    return (\n      <div className={classNames([styles.Wiki, 'centered'])}>\n        <Loading />\n      </div>\n    )\n  }\n\n  return (\n    <div className={styles.Wiki}>\n      <a href={`${wikiUrl}/${wikiPath}`}><Image alt=\"Wiki\" className={classNames([styles.WikiLink])} src={WikiImg} /></a>\n      {loading === false && content.length > 0 && (<ReactMarkdown remarkPlugins={[remarkGfm]}>{content}</ReactMarkdown>)}\n    </div>\n  )\n}\n\nWiki.propTypes = {\n  page: PropTypes.string\n}\n\nWiki.defaultProps = {}\n\nexport default Wiki\n"],"names":["Loading","className","styles","Spinner","animation","variant","defaultProps","repo","process","baseUri","uri","REACT_APP_WIKI_CONTENT_URI","substring","length","wikiUrl","getContent","wikiPath","setContent","setLoading","fetch","response","ok","text","markdown","console","log","Wiki","page","pathname","useLocation","useState","loading","content","capitalizeFirstLetter","split","useEffect","classNames","href","Image","alt","src","remarkPlugins","remarkGfm"],"sourceRoot":""}