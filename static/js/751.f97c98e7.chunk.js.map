{"version":3,"file":"static/js/751.f97c98e7.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-encode/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-gfm-footnote/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: {id: 'footnote-label', className: ['sr-only']},\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","u","b","Symbol","for","d","e","f","g","h","k","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","require","iterator","output","hasIterator","len","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","then","_asyncToGenerator","fn","self","args","apply","undefined","_iterableToArray","iter","from","_regeneratorRuntime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","keys","object","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_toConsumableArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_typeof","element","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","max","limit","Number","POSITIVE_INFINITY","size","markdownSpace","enter","prefix","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","splice","list","remove","items","parameters","chunkStart","unshift","classifyCharacter","combineExtensions","extensions","all","index","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","normalizeIdentifier","toLowerCase","resolveAll","events","called","includes","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","o","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","_construct","Parent","Class","Function","_wrapNativeSuper","_cache","Map","indexOf","has","get","set","Wrapper","stringifyPosition","point","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","nonIterableRest","bail","middleware","callback","fnExpectsCallback","unified","frozen","transformers","fns","pipeline","run","middlewareIndex","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","settings","addPlugin","addList","addPreset","assign","plugin","plugins","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","tree","runSync","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","includeImageAlt","one","alt","children","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","visit","visitor","visitParents","parents","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","characterReferences","sanitizeUri","skip","normalizeUri","colon","questionMark","numberSign","slash","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteBackLabel","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","types","DefinedInfo","mask","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","propTypes","PropTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","character","findAndReplace","RegExp","ignored","convert","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","association","track","options_","lineShift","move","shift","containerFlow","safeOptions","indexStack","tracker","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","whole","gfmFootnoteToMarkdown","peek","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","castFactory","typeFactory","anyFactory","propsFactory","tests","subresult","grandparents","toResult"],"sourceRoot":""}